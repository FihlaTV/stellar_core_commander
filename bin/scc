#!/usr/bin/env ruby

require 'stellar_core_commander'
require 'slop'

def run
  $opts = Slop.parse do
    banner 'Usage: scc -r RECIPE'
    
    on 'stellar-core-bin', 'a path to a stellar-core executable (defaults to `which stellar-core`)', argument: true

    on 'docker-mode', 'mode to run the docker containers in', argument: true, default: 'standalone'

    on 'r', 'recipe', 'a recipe file', argument: true #, required: true
    on 'p', 'process', 'method for running stellar-core', argument: true, default: 'local'
  end

  recipe    = load_recipe
  commander = make_commander

  opts = {
      stellar_core_bin: $opts[:"stellar-core-bin"],
      docker_mode: $opts[:"docker-mode"]
  }
  process   = commander.make_process($opts[:process], opts)

  #run recipe
  transactor = StellarCoreCommander::Transactor.new(process)
  process.run
  process.wait_for_ready
  transactor.run_recipe recipe
  transactor.close_ledger

  output_results(process)
end


def make_commander
  StellarCoreCommander::Commander.new.tap do |c|
    c.cleanup_at_exit!
  end
end

def load_recipe
  recipe = $opts[:recipe]

  if recipe.blank?
    $stderr.puts $opts
    exit 1
  end

  unless File.exist?(recipe)
    $stderr.puts "not found: #{recipe}"
    exit 1
  end

  recipe
end

def output_results(process)
  $stdout.puts process.dump_database
end

run

 